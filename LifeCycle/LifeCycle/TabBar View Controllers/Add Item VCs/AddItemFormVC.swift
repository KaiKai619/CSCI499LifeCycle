//
//  AddItemFormVC.swift
//  LifeCycle
//
//  Created by John Solano on 10/25/20.
//  Copyright Â© 2020 John Solano. All rights reserved.
//

import UIKit
import Firebase

// structure of an item
public struct Item: Codable {

    let name: String

    enum CodingKeys: String, CodingKey {
        case name
    }

}


class AddItemFormVC: UIViewController {


    @IBOutlet weak var buttonCancel: UIBarButtonItem!
    @IBOutlet weak var labelItemName: UILabel!
    @IBOutlet weak var textfieldItemName: UITextField!
    

    override func viewDidLoad() {
        super.viewDidLoad()

        self.view.backgroundColor = UIColor.AppColors.AshGrey
    }
    
    // add item to users list of items
    func addRefToUserList(itemRef: Any, userID: Any){
        print("item Ref: \(itemRef) was added to user: \(userID)")
        //print(userID)
    }
    
    
    // Adds text in itemName to db
    @IBAction func addItemBtn(_ sender: Any) {
        let db = Firestore.firestore() //ref to db
        //let userID = Auth.auth().currentUser?.uid //ref to userID
        let name = textfieldItemName.text! // Get text in item Name
        //let Newitem = Item(name: "\(name)") // Make an item object
        
        // Make an empty document with autogenerated ID in DB
        let newItemRef = db.collection("items").document() // Makes an empty document
        
        // Set the data of the empty document
        // ** ** ** check if name is not null and for name in db already
        newItemRef.setData([
            "name" : "\(name)"
        ]){ err in
            if let err = err {
                print("Error updating document: \(err)")
            } else {
                print("Document successfully updated")
            }
        }
        
        //print(name)// Testitem
        //print(Newitem) // Item(name: "Testitem")
        //print(newItemRef.documentID) // idruO37rH0hmFOPPuRfp
        let userID = Auth.auth().currentUser!.uid
        addRefToUserList(itemRef: newItemRef.documentID, userID: userID)
    }
    
    

    

}
